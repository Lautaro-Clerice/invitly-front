import { render, screen } from "@testing-library/react";
import Hero from "@/components/features/home/Hero";

jest.mock("next-intl/server", () => ({
  getTranslations: jest.fn(async () => {
    const translations: Record<string, string | string[]> = {
      badge: "Invitaciones 칰nicas y personalizadas",
      title: "Celebra tus momentos",
      subtitle:
        "Crea invitaciones digitales elegantes e interactivas que sorprender치n a tus invitados. Dise침o personalizado, animaciones 칰nicas y gesti칩n de RSVP en una sola plataforma.",
      "button.categories": "Ver categor칤as",
      "button.contact": "Contactanos",
      "stats.designs": "Dise침os",
      "stats.clients": "Clientes",
      "stats.satisfaction": "Satisfacci칩n",
      words: ["especiales", "칰nicos"],
      imageAlt:
        "Decoraci칩n elegante de evento, ejemplo de invitaci칩n digital personalizada",
      whatsappMessage:
        "Hola! 游녦 Me das una mano para hacer mi invitacion digital?",
    };

    const t = (key: string) => {
      const value = translations[key];
      return typeof value === "string" ? value : "";
    };

    t.raw = (key: string) => translations[key];

    return t;
  }),
}));

describe("Componente Hero", () => {
  it("deber칤a renderizar la secci칩n del h칠roe", async () => {
    const HeroComponent = await Hero();
    render(HeroComponent);

    expect(screen.getByText(/Celebra tus momentos/i)).toBeInTheDocument();
  });

  it("deber칤a tener un bot칩n de categor칤as que enlace a #categories", async () => {
    const HeroComponent = await Hero();
    render(HeroComponent);

    const categoriesButton = screen.getByRole("link", {
      name: /ver categor칤as/i,
    });
    expect(categoriesButton).toHaveAttribute("href", "#categories");
  });

  it("deber칤a tener un bot칩n de contacto que abra WhatsApp con el mensaje correcto", async () => {
    const HeroComponent = await Hero();
    render(HeroComponent);

    const contactButton = screen.getByRole("link", { name: /contactanos/i });
    const expectedMessage = encodeURIComponent(
      "Hola! 游녦 Me das una mano para hacer mi invitacion digital?"
    );
    const expectedHref = `https://wa.me/5491112345678?text=${expectedMessage}`;

    expect(contactButton).toHaveAttribute("href", expectedHref);
    expect(contactButton).toHaveAttribute("target", "_blank");
    expect(contactButton).toHaveAttribute("rel", "noopener noreferrer");
  });

  it("deber칤a mostrar las estad칤sticas correctamente", async () => {
    const HeroComponent = await Hero();
    render(HeroComponent);

    expect(screen.getByText("500+")).toBeInTheDocument();
    expect(screen.getByText("10K+")).toBeInTheDocument();
    expect(screen.getByText("98%")).toBeInTheDocument();
  });
});
